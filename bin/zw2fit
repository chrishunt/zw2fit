#!/usr/bin/env ruby

require 'optparse'
require './zw2fit'

options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: zw2fit [options]"

  opts.on("--zwo ZWO_PATH", "Path to workout(s) in ZWO format") do |zwo_path|
    options[:zwo_path] = zwo_path
  end

  opts.on("--ftp CURRENT_FTP", Integer, "Current FTP") do |ftp|
    options[:ftp] = ftp
  end

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end
end.parse!

if options[:ftp].nil? || options[:zwo_path].nil?
  puts "zw2fit: zwo and ftp required. See 'zw2fit --help' for usage."
  exit 1
end

# Load file list from provided zwo_path
files = if File.directory?(options[:zwo_path])
  Dir.glob("#{options[:zwo_path]}/*.zwo", File::FNM_CASEFOLD)
else
  [options[:zwo_path]]
end

files.each do |path|
  puts "Opening #{path}" if options[:verbose]

  zwo = begin
          File.read(path)
        rescue => e
          puts "Error opening #{path}: #{e.message}"
          exit 1
        end

  # Save output in same directory as original file
  out_path = File.join(
    File.dirname(path),
    File.basename(path, '.zwo'),
  )

  csv_path = "#{out_path}.csv"
  fit_path = "#{out_path}.fit"

  puts "Writing CSV to #{csv_path}" if options[:verbose]

  File.open(csv_path, 'w') do |f|
    f.write Zw2fit.new(
      zwo: zwo,
      verbose: options[:verbose]
    ).to_csv(
      ftp: options[:ftp]
    )
  end

  puts "Converting CSV to FIT, writing to #{fit_path}" if options[:verbose]

  system(
    "java -jar #{File.join(File.dirname(__FILE__), 'FitCSVTool.jar')} " \
    "-c \"#{csv_path}\" \"#{fit_path}\""
  )

  File.delete(csv_path)
end
